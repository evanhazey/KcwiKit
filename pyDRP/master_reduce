#!/bin/zsh
# usage: complete KCWI reduction
# supply regions files
# needs to be in the same directory as raw data! -- update this!

echo "Hello!"
echo "Welcome to the CAREFUL version of the KCWI python DRP!"
echo "Please make sure you have run 'conda activate kcwidrp' before proceeding"



while getopts d:ho:s: optval
do
   case $optval in
		 h) HELP=1;;
		 d) dir="$OPTARG";;
		 # st) STAGE="$OPTARG";;
		 o) obj=(); while IFS= read -r line; do obj+=("$line"); done <$OPTARG;;
		 # s) std+=({$OPTARG});;
		 *) echo "master_reduce -h for help"; exit -1;;
   esac
done
# shift $((OPTIND-1));

if [ $HELP ]; then
	echo "master_reduce -d RAW_DIR -o OBJECTS -s STDS [-h]"
	echo "KCWI python DRP + extra intermediate steps"
	echo "-d RAW_DIR  directory with raw data"
	# echo "-st STAGE   which stage of the reduction to do?"
	echo "-o OBJECTS  list of science objects e.g. 43..54"
	echo "-s STDS     list of standard stars e.g. 54..59"
	echo "-h .......  help (display)"
	exit -1
fi

# Example: ~/Software/kcwi/pyDRP/master_reduce -d /Volumes/Data/Documents/Chuck/Observing/2022may28 -o 071..092 -s 061..070 -s 093..101






# dir=/Volumes/Data/Documents/Chuck/KCWI_DRP/pyDRP/q0933-MD75_bash_test-2/
cd $dir

echo "We are in $dir"
echo ""

# echo ""
# echo "Stage 1"

echo "Science Objects: $obj"
# echo "Standard Stars: $std"

# obj=({53..71}) #science target file numbers
# std=({72..74}) #standard star file numbers
# all=("${obj[@]}" "${std[@]}") #union of obj and std
# echo "All Objects: $all"

echo ""
echo "Stage 1"

# echo {${obj[1]}..${obj[2]}}
#conda activate kcwidrp

set -e #make sure we don't proceed if not in kcwidrp environment


reduce_kcwi -f kb*.fits -g -st 1
echo "Stage 1 is Done!"

# make *_smsk.fits files
for i in $obj
do
	python ~/Software/KCWI_DRP/kcwidrp/scripts/kcwi_masksky_ds9.py redux/${i}_intf.fits redux/$i.reg;
done

mkdir redux/stage5_nomask
mv redux/*intk.fits redux/*sky.fits redux/stage5_nomask

sed -i '' '/sky/d' kcwi.proc #remove sky
sed -i '' '/intk/d' kcwi.proc #remove intk

#make kcwi.sky file
for i in $obj
do
	echo ${i}.fits ${i}.fits redux/${i}_smsk.fits
done >> kcwi.sky

echo "Stage 2"
reduce_kcwi -f kb*.fits -g -st 2
echo "Stage 2 is Done!"

#note fitsheader needs astropy!

all=($(fitsheader redux/kb*_icube.fits --extension 0 -f -k IMTYPE | grep OBJECT | sed 's/_icube.*//' | sed 's$redux/$$'))

python ~/Software/kcwi/pyDRP/kcwi_flatten_cube.py redux/${^obj}_icube.fits #make *_icube_2d.fits files
python ~/Software/kcwi/pyDRP/kcwi_collapse.py redux/${^all}_icube.fits #make *_icube.thum.fits files

python ~/Software/kcwi/pro/kcwi_makemask_medfilter_nik.py redux #make *_icube_2d.mask.fits and *_icube.mask.fits files

#make a backup of *icube.fits files
mkdir redux/pre_med_filt
cp redux/*icube.fits redux/pre_med_filt

python ~/Software/kcwi/pyDRP/kcwi_medfilter.py redux/${^all}_icube.fits #median filter

# remove SKY and OBJECT from kcwi.proc
sed -i '' '/OBJECT/d' kcwi.proc
sed -i '' '/SKY/d' kcwi.proc

echo "Stage 3"
reduce_kcwi -f kb*.fits -g -st 3
echo "Stage 3 is Done!"

mkdir fluxcal
cd fluxcal
ls ../redux/*invsens*fits | column -c 1 >> med_bl.list

std=($(ls ../redux/*invsens*fits | xargs -n 1 basename | sed 's/_invsens.*//'))

python ~/Software/kcwi/pyDRP/kcwi_combinestd.py med_bl.list
cp med_bl_invsens.fits ../redux #this should be fixed?
cd ../ #perhaps there's a better way to do this

#clean proc table
sed -i '' '/ea/d' kcwi.proc
sed -i '' '/icubes/d' kcwi.proc

for i in $std
do
	sed -i '' "s/${i}.fits/        med_bl.fits/g" kcwi.proc
done

mkdir redux/pre_std_star_stack
cp redux/*icubes.fits redux/pre_std_star_stack

echo "Stage 4"
reduce_kcwi -f kb*.fits -g -st 3
echo "Stage 4 is Done!"

echo "First Part of Reduction Complete"
echo "Now onto stacking??"
